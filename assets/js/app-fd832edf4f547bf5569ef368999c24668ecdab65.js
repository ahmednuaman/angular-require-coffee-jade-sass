(function(){define("config",[],function(){return{ngApp:"radian",api:{data:"/data/menu.json"},path:{partial:"/assets/partial/"}}})}).call(this),function(){define("helper/radian-module-helper",["config","angular","lodash"],function(e,t,a){var r;return r={construct:function(e){var t;return t=function(){var e;e=a.toArray(arguments),a.forEach(t.$inject,function(t){return function(a,r){return t[a]=e[r]}}(this)),"function"==typeof this.init&&this.init()},a.assign(t.prototype,e),t},inject:function(e,t){return e.$inject=a.toArray(t)},register:function(a,o,n,i){return r.inject(i,n),t.module(e.ngApp)[a](o,i)},registerClass:function(e){return function(t){return t[2]=r.construct(t[2]),r.registerModule(t,e)}},registerFunction:function(e){return function(t){return r.registerModule(t,e)}},registerModule:function(e,t){return r.register.apply(this,[t].concat(a.toArray(e)))},uppercaseFirstLetter:function(e){return e.charAt(0).toUpperCase()+e.slice(1)}},a.forEach(["controller","directive","factory","filter","service"],function(e){return r["register"+r.uppercaseFirstLetter(e)]="controller"===e||"service"===e?r.registerClass(e):r.registerFunction(e)}),r})}.call(this),function(){define("controller/radian-controller",["helper/radian-module-helper"],function(e){return function(){return e.registerController(arguments)}})}.call(this),function(){define("partials",["config","angular"],function(e,t){var a,r;return r=function(e){e.put("/assets/partial/code-partial.html",'<div id="code"><h1 id="the-code">The Code</h1><p>Radian contains the documentation as comments in the source code of its files. Also to jazz things up a bit I’ve run the code through the awesome <a href="http://jashkenas.github.io/docco/">Docco</a> and <a href="docs/app.html" target="_self">the generated docs are also available</a> for your browsing pleasure.</p><p>Radian has three major parts to it:</p><ul><li>The app code</li><li>The local tasks and helpers</li><li>The tests</li></ul><p>Here’s an overview of these bases and you can follow the code documentation onwards:</p><h2 id="the-app-code">The app code</h2><p>Remember that Radian is simply an abstract of how to develop <a href="http://angularjs.org">AngularJS</a> in a scalable manner. We begin our journey by looking at how the use of AMD available from <a href="http://requirejs.org">RequireJS</a> helps bring things together: jump to <a href="docs/app.html" target="_self"><code>app.coffee</code></a>.</p><h2 id="the-local-tasks-and-helpers">The local tasks and helpers</h2><p>There are three main local tasks:</p><ul><li>The grunt tasks (<a href="docs/Gruntfile.html" target="_self"><code>Gruntfile.coffee</code></a>)</li><li>The local server (<a href="docs/server.html" target="_self"><code>server.coffee</code></a>)</li><li>The web crawler (<a href="docs/crawler.html" target="_self"><code>crawler.coffee</code></a>)</li></ul><p>And not forgetting the <a href="https://github.com/ahmednuaman/generator-radian">Yeoman generator</a>.</p><h3 id="the-grunt-tasks">The grunt tasks</h3><p><a href="http://gruntjs.com">Grunt</a> is a great utility. It’s used to run all the preprocessors that the app uses and also used to put everything into place when the app is built. The task that you’ll probably use the most is the default <code>grunt</code> task; this does the following:</p><ul><li>Installs the <a href="http://bower.io">Bower</a> dependancies</li><li>Runs the <a href="http://compass-style.org">Compass</a>, <a href="http://coffeescript.org">CoffeeScript</a> and <a href="http://jade-lang.com">Jade</a> compilers in dev mode</li><li>Runs the local server</li><li>And watches for any updates to files ready to be recompiled</li></ul><p>You can find out more by reviewing <a href="docs/Gruntfile.html" target="_self"><code>Gruntfile.coffee</code></a>.</p><h3 id="the-local-server">The local server</h3><p>This is a very handy little server that runs off <a href="http://expressjs.com">expressjs</a>. It’ll serve the local files by default to <code>http://localhost:8000</code> and it’ll also serve the raw non-compiled files as <code>text/plain</code> for convience of debugging.</p><p>You can find out more by reviewing <a href="docs/server.html" target="_self"><code>server.coffee</code></a>.</p><h3 id="the-web-crawler">The web crawler</h3><p><img src="http://i.imgur.com/dckQ9tO.gif" alt="A screen shot showing Radian working on the lynx screen reader" width="100%"></p><p>One of the biggest issues with creating single HTML page apps is trying to deal with SEO. This has been solved for you by a web crawler that uses <a href="http://phantomjs.org">PhantomJS</a>. It’ll go to your homepage, find local site links and go off and cache <code>html</code> versions of those pages. This makes dealing with an SEO stratergy a lot easier.</p><p>You can find out more by reviewing <a href="docs/crawler.html" target="_self"><code>crawler.coffee</code></a>.</p></div>'),e.put("/assets/partial/cta-partial.html",'<div id="cta" class="row"><a href="https://github.com/ahmednuaman/radian">So what are you waiting for? Try it now &#9755;</a></div>'),e.put("/assets/partial/directive/menu-component-partial.html",'<div class="menu-component"><ul class="list-menu"><li data-ng-repeat="item in items"><a data-ng-href="{{item.href}}" data-ng-class="{&quot;selected&quot;: item.selected}" target="{{item.target}}">{{item.title}}</a></li></ul></div>'),e.put("/assets/partial/directive/stub-partial.html",'<div class="stub"></div>'),e.put("/assets/partial/error-partial.html",'<div id="error" data-ng-controller="ErrorController" class="text-centre"><h2>Sorry but a {{code}} error has occurred, and here\'s a picture of a sausage dog:</h2><img src="//i.imgur.com/nAdcBva.jpg" width="100%"></div>'),e.put("/assets/partial/faqs-partial.html",'<div id="faqs"><h1 id="faqs">FAQs</h1><h2 id="why-did-you-write-this-">Why did you write this?</h2><p>I think AngularJS is great. I’ve used it on a number of small and large projects, but there was something that wasn’t quite right about how to set up an app. I found that many developers chose different ways of doing the same thing, and this led to complexity and tight coupling. So I decided to create what <a href="https://github.com/marionettejs/backbone.marionette">Marionette is to Backbone</a> but for AngularJS.</p><h2 id="what-about-angular-seed-https-github-com-angular-angular-seed-">What about <a href="https://github.com/angular/angular-seed">angular-seed</a>?</h2><p>The angular-seed project is a good place for a developer new to AngularJS to start, but if you want to build a truly scalable and multi developer app then you need a more robust approach.</p><p>Radian provides a common style and set up to dealing with problems faced by teams when working on AngularJS apps. The beauty of using AMD to handle the loading of dependancies outside of the releams of AngularJS provides a higher level of abstraction and modulartiry to your code.</p><p>Radian is also pretty simple: all that’s really happening is that you’re splitting up your app into small, managable and decoupled components; this means you write more modulised code that helps you adopt the <a href="http://en.wikipedia.org/wiki/Dont_repeat_yourself">DRY</a> approach to your app.</p><h2 id="what-if-you-don-t-use-sass-jade-or-coffeescript-">What if you don’t use SASS, Jade or CoffeeScript?</h2><p>Don’t worry buddy, that’s cool. You can simply grab all the JS, CSS and HTML by running the <code>grunt</code> command and dump all that precompiler nonsense.</p><p>The advantage (IMHO) to using precompiled languages is that they require a strict style and thus code is cleaner and more consistent; but that’s a discussion for another day.</p><h2 id="what-about-tests-">What about tests?</h2><p>That’s been covered too. Since the point of Radian is to highlight a style of app development I’ve also written unit and client tests to make sure that all the code is pretty nice, open your terminal and run:</p><pre><code>npm test\n</code></pre><h2 id="are-there-any-docs-">Are there any docs?</h2><p>Yep, the source code is all commented and I’ve used <a href="https://github.com/jashkenas/docco">Docco</a> to <a href="docs/app.html" target="_self">compile the docs</a>.</p><h2 id="who-are-you-">Who are you?</h2><p>I’m <a href="http://ahmednuaman.com">Ahmed Nuaman</a>, I wrestle dachshunds and solve problems.</p></div>'),e.put("/assets/partial/footer-partial.html",'<div id="footer" data-ng-controller="FooterController" class="row"><ul class="list-menu"><li><a href="https://github.com/ahmednuaman/radian">Github Repo</a></li><li><a href="https://travis-ci.org/ahmednuaman/radian">Travis CI Status</a></li><li><a href="https://github.com/ahmednuaman/radian/blob/master/LICENSE">MIT License</a></li></ul><a href="http://ahmednuaman.com">Made with pain and blood by @ahmednuaman</a></div>'),e.put("/assets/partial/header/header-menu-partial.html",'<div id="header-menu" data-ng-controller="HeaderMenuController"><div data-menu-component="data-menu-component" data-ng-model="menuItems"></div></div>'),e.put("/assets/partial/header/header-partial.html",'<div id="header" data-ng-controller="HeaderController" class="row"><div class="text-centre"><a id="logo" href="/"></a><h1 id="-radian-is-a-scalable-angularjs-framework-perfect-for-multi-developer-projects"><strong>Radian</strong> is a scalable AngularJS framework, perfect for multi developer projects</h1></div><div data-ng-include="menuPartial"></div></div>'),e.put("/assets/partial/home-partial.html",'<div id="home" data-ng-controller="HomeController"><div class="row"><div class="col-3"><span class="icon icon-scale"></span><h2 id="code-that-scales">Code that scales</h2><p>Radian is the perfect set up for projects that need to scale fast. The AMD structure allows single developers to large teams to quickly and efficiently write and deploy great apps.</p></div><div class="col-3"><span class="icon icon-setup"></span><h2 id="rapid-set-up">Rapid set up</h2><p>Radian comes with everything out the box, that means there’s all the minification and concatination tasks as well as a local server and even a <a href="http://phantomjs.org">PhantomJS</a> web crawler to deal with SEO woes.</p></div><div class="col-3"><span class="icon icon-lightweight"></span><h2 id="light-weight">Light weight</h2><p>Radian is a way of doing things, so there’s nothing new to install and no additional dependancies to <a href="http://angularjs.org">AngularJS</a> and <a href="http://requirejs.org">RequireJS</a>.</p></div></div><div class="row"><div class="col-3"><span class="icon icon-tests"></span><h2 id="100-code-coverage">100% code coverage</h2><p>Testing is at the heart of Radian, so out the box it comes complete with all the unit tests you could want, <a href="https://travis-ci.org/ahmednuaman/radian">here’s the proof</a>.</p></div><div class="col-3"><span class="icon icon-yeoman"></span><h2 id="generate-with-yeoman">Generate with Yeoman</h2><p>Radian is better with <a href="http://yeoman.io">Yeoman</a>, use it to set up your project and use the subgenerators to quickly create your app’s code, with tests included.</p></div><div class="col-3"><span class="icon icon-customise"></span><h2 id="your-app-your-way">Your app, your way</h2><p>Radian is highly customisable; from the offset you can start with the barebones app or reverse engineer the example code.</p></div></div><div class="row"><h2 id="quick-start">Quick start</h2><p>The purpose of Radian is to help your team and you start building your app with minimal set up. There are two ways to create a Radian project: using <a href="http://yeoman.io">Yeoman</a> or by cloning the <a href="https://github.com/ahmednuaman/radian">Radian project</a> on GitHub.</p></div><div class="row"><h3 id="dependencies">Dependencies</h3><p>There are a few dependencies to install before we can get started:</p><ul><li><a href="http://gruntjs.com">GruntJS</a></li><li><a href="http://bower.io">Bower</a></li></ul><p>Install these by running:</p><pre><code>npm install -g grunt-cli bower\n</code></pre><p>If you want to use Yeoman to generate your app, you’ll need to install it and the Radian generator:</p><pre><code>npm install -g yo generator-radian\n</code></pre><p>If you want to write your app in <a href="http://coffeescript.org/">CoffeeScript</a>, you’ll need to install that as well; just follow the instructions on the website.</p></div><div class="row"><h3 id="radian-using-yeoman">Radian using Yeoman</h3><p>Once you have Yeoman and the Radian generator installed, you can set up your Radian project simply by running:</p><pre><code>yo radian\n</code></pre><p>Radian gives you the option of how you want to code your app. By default it will use CoffeeScript, SASS and Jade; however as you run the set up via Yeoman it will give you the options of which CSS preprocessors you want to use, if any, from the following list:</p><ul><li><a href="http://sass-lang.com/">SASS</a></li><li><a href="http://sass-lang.com/">SCSS</a></li><li><a href="http://lesscss.org/">Less</a></li><li><a href="http://learnboost.github.io/stylus/">Stylus</a></li></ul><p>You can also choose not to use any preprocessors and instead just use vanilla JS, CSS and HTML. All the fun!</p><p>You can then make use of the built in subgenerators to create your project files, you have the choice of two types of generators, you use them by running:</p><pre><code>yo radian:TYPE &#39;NAME&#39;\n</code></pre><ul><li><strong>TYPE</strong>: is the generator you’re wanting to use and…</li><li><strong>NAME</strong>: is the file/class/module name; this will be automatically slugified/camelized/classified for you, so it’s better to write something like ‘foo bar’, rather than ‘fooBar’.</li></ul><h3 id="generating-coffeescript-files">Generating CoffeeScript files</h3><p>This generator will create a <strong>TYPE</strong>, say controller, in <code>assets/coffee/TYPE</code> and create a test spec in <code>test/unit/TYPE</code>; where <strong>TYPE</strong> is one of the following:</p><ul><li>controller</li><li>service</li><li>factory</li><li>filter</li><li>directive</li><li>collection</li><li>vo</li></ul><p>Eg running:</p><pre><code>yo radian:controller &#39;foo bar&#39;\n</code></pre><p>Creates <code>assets/coffee/controller/foo-bar-controller.coffee</code> containing:</p><pre><code>define [\n  &#39;controller/radian-controller&#39;\n], (RC) -&gt;\n  class extends RC\n    @register &#39;FooBarController&#39;, [\n      &#39;$scope&#39;\n    ]\n\n    init: () -&gt;\n</code></pre><p>And <code>test/unit/controller/foo-bar-controller-spec.coffee</code> containing:</p><pre><code>define [\n  &#39;config&#39;\n  &#39;angular&#39;\n  &#39;controller/foo-bar-controller&#39;\n], (cfg, A) -&gt;\n  describe &#39;Foo Bar controller&#39;, () -&gt;\n    $scope = null\n    createController = null\n\n    beforeEach module cfg.ngApp\n\n    beforeEach inject ($injector) -&gt;\n      $controller = $injector.get &#39;$controller&#39;\n      $rootScope = $injector.get &#39;$rootScope&#39;\n\n      $scope = $rootScope.$new()\n\n      createController = () -&gt;\n        $controller &#39;fooBarController&#39;,\n          $scope: $scope\n\n    it &#39;should load&#39;, () -&gt;\n      controller = createController()\n</code></pre><p>Note that you can also use the generator to create vanilla JavaScript files. It’s all down to the config options you choose when you create your project using Yeoman.</p><h3 id="generating-partials">Generating partials</h3><p>This generator creates a partial and an accompanying style partial (note that the types of partial will depend on your Yeoman set up options, e.g. if you chose to use Jade and SASS, then a Jade partial with a SASS style partial would be created), e.g. running:</p><pre><code>yo radian:partial &#39;my new view&#39;\n</code></pre><p>Creates <code>assets/css/partial/_my-new-view.sass</code> and <code>assets/partial/my-new-view-partial.jade</code>, and finally updates <code>assets/css/_partials.sass</code> to include the newly created SASS file.</p><h3 id="radian-without-using-yeoman">Radian without using Yeoman</h3><p>All you need to have installed is <a href="http://git-scm.org">git</a> and the dependencies listed above.</p><p>To start using Radian simply download the code from <a href="https://github.com/ahmednuaman/radian">github.com</a> and set it up:</p><pre><code>npm install\ngrunt install\ngrunt\n</code></pre></div><div class="row"><h3 id="and-then-">And then…</h3><p>Running <code>grunt</code> will generate all the JS, CSS and HTML, and it’ll also start the local server, so point your browser to <a href="http://localhost:8000">http://localhost:8000</a> and you’re laughing.</p></div><div class="row"><h3 id="testing">Testing</h3><p>To test your new application, you need to make sure some test dependencies are installed globally so they are available on your $PATH:</p><pre><code>npm install -g protractor karma\nwebdriver-manager update\n</code></pre><p>This will install Protractor, Angular’s end-to-end testing framework, Karma, a Javascript test runner, and the latest <a href="http://docs.seleniumhq.org/">Selenium</a> standalone server and Chromedriver.</p><p>You will then be able to execute all tests – unit, integration and end-to-end – by running:</p><pre><code>grunt test\n</code></pre></div></div>')},r.$inject=["$templateCache"],a=t.module(e.ngApp),a.run(r)})}.call(this),function(){define("controller/error-controller",["controller/radian-controller"],function(e){return e("ErrorController",["$scope","$routeParams","pageTitleFactory"],{init:function(){return this.$scope.code=this.$routeParams.code||"404",this.pageTitleFactory.setTitle("Error "+this.$scope.code)}})})}.call(this),function(){define("controller/home-controller",["controller/radian-controller"],function(e){return e("HomeController",["$scope"],{init:function(){}})})}.call(this),function(){define("routes",["config","angular","controller/error-controller","controller/home-controller"],function(e,t){var a,r;return r=function(t,a){return t.when("/code",{templateUrl:""+e.path.partial+"code-partial.html"}).when("/error/:code",{templateUrl:""+e.path.partial+"error-partial.html"}).when("/error",{templateUrl:""+e.path.partial+"error-partial.html"}).when("/faqs",{templateUrl:""+e.path.partial+"faqs-partial.html"}).when("/",{templateUrl:""+e.path.partial+"home-partial.html"}),t.otherwise({redirectTo:"/"}),a.html5Mode(!0)},r.$inject=["$routeProvider","$locationProvider"],a=t.module(e.ngApp),a.config(r)})}.call(this),function(){define("directive/radian-directive",["helper/radian-module-helper"],function(e){var t;return t=function(){return e.registerDirective(arguments)}})}.call(this),function(){define("directive/menu-component-directive",["config","directive/radian-directive"],function(e,t){return t("menuComponent",[],function(){return{templateUrl:""+e.path.partial+"directive/menu-component-partial.html",restrict:"A",replace:!0,scope:{items:"=ngModel"}}})})}.call(this),function(){define("factory/radian-factory",["helper/radian-module-helper"],function(e){var t;return t=function(){return e.registerFactory(arguments)}})}.call(this),function(){define("vo/menu-item-vo",["lodash"],function(e){return function(t){return e.assign(t,{selected:!1,target:t.target})}})}.call(this),function(){define("collection/menu-items-collection",["lodash","vo/menu-item-vo"],function(e,t){return function(a,r){var o;return o=e.map(r,t),a.resolve(o)}})}.call(this),function(){define("factory/page-title-factory",["factory/radian-factory"],function(e){return e("pageTitleFactory",["$rootScope"],function(e){var t,a,r;return a="pageTitleChange",t=function(t){return e.$emit(a,t)},r={setTitle:function(e){return t(e)},addListener:function(t){return e.$on(a,t)}}})})}.call(this),function(){define("factory/menu-factory",["angular","lodash","factory/radian-factory","collection/menu-items-collection","factory/page-title-factory"],function(e,t,a,r){return a("menuFactory",["$location","$q","$rootScope","pageTitleFactory"],function(t,a,o,n){var i,l;return l=function(e,t){return i.collection=t,i.digest(),e.resolve()},o.$on("$locationChangeSuccess",function(){return i.digest()}),i={collection:null,selectedItem:null,set:function(t,o){var n,i;return n=a.defer(),i=e.bind(this,l,t),r(n,o),n.promise.then(i)},get:function(){return i.collection},digest:function(){return i.setSelectedItemByHref(t.path())},setSelectedItemByHref:function(t){return i.selectedItem&&(i.selectedItem.selected=!1),e.forEach(i.collection,function(e,a){return e.selected="/"===t?e.href===t:!!~e.href.indexOf(t),e.selected?(i.selectedItem=i.collection[a]=e,n.setTitle(e.title)):void 0})}}})})}.call(this),function(){define("factory/page-error-factory",["lodash","factory/radian-factory"],function(e,t){return t("pageErrorFactory",["$location"],function(t){var a,r;return r=function(e){return t.path("/error/"+e)},a={showError:function(e){return r(e)}},e.forEach(["404","500"],function(e){return a["show"+e]=function(){return a.showError(e)}}),a})})}.call(this),function(){define("service/radian-service",["helper/radian-module-helper"],function(e){return function(){return e.registerService(arguments)}})}.call(this),function(){define("service/menu-service",["config","angular","service/radian-service","factory/menu-factory"],function(e,t,a){return a("menuService",["$q","$resource","menuFactory"],{init:function(){return this.menu=this.$resource(e.api.data)},get:function(){var e,a,r;return e=this.$q.defer(),r=t.bind(this,this.handleSuccess,e),a=t.bind(this,this.handleFailure,e),this.menu.get().$promise.then(r,a),e.promise},handleSuccess:function(e,t){return this.menuFactory.set(e,t.items)},handleFailure:function(e){return e.reject()}})})}.call(this),function(){define("controller/header/header-menu-controller",["angular","controller/radian-controller","directive/menu-component-directive","factory/menu-factory","factory/page-error-factory","service/menu-service"],function(e,t){return t("HeaderMenuController",["$scope","menuFactory","menuService","pageErrorFactory"],{init:function(){return this.loadMenu()},loadMenu:function(){var t,a;return a=e.bind(this,this.handleLoadMenuSuccess),t=e.bind(this,this.handleLoadMenuFailure),this.menuService.get().then(a,t)},handleLoadMenuSuccess:function(){return this.$scope.menuItems=this.menuFactory.get()},handleLoadMenuFailure:function(){return this.pageErrorFactory.show500()}})})}.call(this),function(){define("controller/header/header-controller",["config","controller/radian-controller","controller/header/header-menu-controller"],function(e,t){return t("HeaderController",["$scope"],{init:function(){return this.addPartials()},addPartials:function(){return this.$scope.menuPartial=""+e.path.partial+"header/header-menu-partial.html"}})})}.call(this),function(){define("controller/footer-controller",["controller/radian-controller"],function(e){return e("FooterController",["$scope"],{init:function(){}})})}.call(this),function(){define("factory/page-loader-factory",["factory/radian-factory"],function(e){return e("pageLoaderFactory",["$rootScope"],function(e){var t,a,r;return a="pageLoaderChange",t=function(t){return e.$emit(a,t)},r={setShow:function(e){return t(e)},show:function(){return r.setShow(!0)},hide:function(){return r.setShow(!1)},addListener:function(t){return e.$on(a,t)}}})})}.call(this),function(){define("controller/app-controller",["config","angular","controller/radian-controller","partials","routes","controller/header/header-controller","controller/footer-controller","factory/page-loader-factory","factory/page-title-factory"],function(e,t,a){return a("AppController",["$scope","pageLoaderFactory","pageTitleFactory"],{init:function(){return this.addListeners(),this.addPartials(),this.addScopeMethods()},addListeners:function(){return this.pageLoaderFactory.addListener(t.bind(this,this.handlePageLoaderChange)),this.pageTitleFactory.addListener(t.bind(this,this.handlePageTitleChange))},addPartials:function(){return this.$scope.ctaPartial=""+e.path.partial+"cta-partial.html",this.$scope.footerPartial=""+e.path.partial+"footer-partial.html",this.$scope.headerPartial=""+e.path.partial+"header/header-partial.html"},addScopeMethods:function(){return this.$scope.handleViewLoaded=t.bind(this,this.handleViewLoaded)},handlePageTitleChange:function(e,t){return this.$scope.pageTitle="Radian ~ A scalable AngularJS framework ~ "+t},handlePageLoaderChange:function(e,t){return this.$scope.hideLoader=!t},handleViewLoaded:function(){return this.pageLoaderFactory.hide()}})})}.call(this),function(){define("startup",["config","angular"],function(e,t){return require(["angular-animate","angular-resource","angular-route"],function(){return t.module(e.ngApp,["ngAnimate","ngResource","ngRoute"]),require(["controller/app-controller"],function(){return t.bootstrap(document.documentElement,[e.ngApp])})})})}.call(this),function(){require.config({baseUrl:"/assets/js/",paths:{angular:"//ajax.googleapis.com/ajax/libs/angularjs/1.2.14/angular.min","angular-animate":"//ajax.googleapis.com/ajax/libs/angularjs/1.2.14/angular-animate.min","angular-resource":"//ajax.googleapis.com/ajax/libs/angularjs/1.2.14/angular-resource.min","angular-route":"//ajax.googleapis.com/ajax/libs/angularjs/1.2.14/angular-route.min",lodash:"//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.min"},shim:{angular:{exports:"angular"},lodash:{exports:"_"}}}),require(["startup"])}.call(this),define("app",function(){});